replicaCount: 1
strategyType:
image:
  repository: user/repo
  tag: stable
  pullPolicy: Always
  secrets:
    - name: registry
podAnnotations: {}
application:
  track: stable
  tier: web
  migrateCommand:
  initializeCommand:
  secretName:
  secretChecksum:
hpa:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
project:
  repo:
  slug:
  env:
  url:
service:
  enabled: true
  annotations: {}
  name: web
  type: ClusterIP
  url: http://my.host.com/
  additionalHosts:
  commonName:
  externalPort: 5000
  internalPort: 5000
ingress:
  enabled: true
  tls:
    enabled: true
    secretName: ""
  annotations:
    kubernetes.io/ingress.class: "nginx"
  modSecurity:
    enabled: false
    secRuleEngine: "DetectionOnly"
    # secRules:
    #   - variable: ""
    #     operator: ""
    #     action: ""
  canary:
    weight:
prometheus:
  metrics: false
livenessProbe:
  path: "/"
  initialDelaySeconds: 15
  timeoutSeconds: 15
  scheme: "HTTP"
  probeType: "httpGet"
readinessProbe:
  path: "/"
  initialDelaySeconds: 5
  timeoutSeconds: 3
  scheme: "HTTP"
  probeType: "httpGet"
mariadb:
  enabled: false
mongodb:
  enabled: false
mysql:
  enabled: false
redis:
  enabled: false
postgresql:
  enabled: false

resources:
  #  limits:
  #    cpu: 100m
  #    memory: 128Mi
  requests:
#    cpu: 100m
#    memory: 128Mi

## ref: https://kubernetes.io/docs/concepts/workloads/pods/disruptions/
podDisruptionBudget:
  enabled: false
  # minAvailable: 1
  maxUnavailable: 1

## ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
networkPolicy:
  enabled: false
  spec:
    podSelector:
      matchLabels: {}
    ingress:
      - from:
          - podSelector:
              matchLabels: {}
          - namespaceSelector:
              matchLabels:
                managed_by: lambda

workers:
  {}
  # worker:
  #   replicaCount: 1
  #   terminationGracePeriodSeconds: 60
  #   command:
  #   - /bin/herokuish
  #   - procfile
  #   - start
  #   - worker
  #   livenessProbe:
  #     path: "/"
  #     initialDelaySeconds: 15
  #     timeoutSeconds: 15
  #     scheme: "HTTP"
  #     probeType: "httpGet"
  #   readinessProbe:
  #     path: "/"
  #     initialDelaySeconds: 5
  #     timeoutSeconds: 3
  #     scheme: "HTTP"
  #     probeType: "httpGet"
  #   preStopCommand:
  #   - /bin/herokuish
  #   - procfile
  #   - start
  #   - stop_worker
